{"version":3,"sources":["components/DragSortingTable.jsx","ColumnsConfig.js","App.jsx","serviceWorker.js","index.js"],"names":["options","delayTouchStart","type","DragableBodyRow","index","moveRow","className","style","restProps","ref","React","useRef","useDrop","accept","collect","monitor","dragIndex","getItem","isOver","dropClassName","drop","item","useDrag","isDragging","drag","cursor","DragSortingTable","props","useState","data","setData","columns","setColumns","components","body","row","useCallback","hoverIndex","dragRow","newData","update","$splice","localStorage","setItem","JSON","stringify","useEffect","dataSource","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","scroll","x","pagination","onRow","record","getColumns","onEditRow","onDeleteRow","title","dataIndex","key","fixed","width","render","text","buyFrom","buyTo","target","toFixed","EditOutlined","paddingRight","onClick","placement","onConfirm","DeleteOutlined","paddingLeft","Header","Layout","Content","layoutForm","labelCol","span","wrapperCol","App","showModal","setShowModal","isUpdate","setIsUpdate","currentFormData","setCurrentFormData","handleCancelModal","dataStorage","parse","filter","code","visible","onCancel","footer","map","toUpperCase","cut_loss","name","layout","Item","label","disabled","value","onChange","e","min","step","marginLeft","marginRight","placeholder","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.085e8de0.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Table } from \"antd\";\nimport { DndProvider, useDrag, useDrop } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport update from \"immutability-helper\";\nimport { isMobile } from \"react-device-detect\";\n\nconst options = {\n  delayTouchStart: 500,\n};\n\nconst type = \"DragableBodyRow\";\n\nconst DragableBodyRow = ({\n  index,\n  moveRow,\n  className,\n  style,\n  ...restProps\n}) => {\n  const ref = React.useRef();\n  const [{ isOver, dropClassName }, drop] = useDrop({\n    accept: type,\n    collect: (monitor) => {\n      const { index: dragIndex } = monitor.getItem() || {};\n      if (dragIndex === index) {\n        return {};\n      }\n      return {\n        isOver: monitor.isOver(),\n        dropClassName:\n          dragIndex < index ? \" drop-over-downward\" : \" drop-over-upward\",\n      };\n    },\n    drop: (item) => {\n      moveRow(item.index, index);\n    },\n  });\n  const [, drag] = useDrag({\n    item: { type, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  drop(drag(ref));\n  return (\n    <tr\n      ref={ref}\n      className={`${className}${isOver ? dropClassName : \"\"}`}\n      style={{ cursor: \"move\", ...style }}\n      {...restProps}\n    />\n  );\n};\n\nconst DragSortingTable = (props) => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  const components = {\n    body: {\n      row: DragableBodyRow,\n    },\n  };\n\n  const moveRow = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragRow = data[dragIndex];\n      const newData = update(data, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRow],\n        ],\n      });\n      setData(newData);\n      localStorage.setItem(\"data\", JSON.stringify(newData));\n    },\n    [data]\n  );\n\n  useEffect(() => {\n    setData(props.dataSource);\n    setColumns(props.columns);\n  }, [props.dataSource, props.columns]);\n\n  return (\n    <DndProvider\n      backend={isMobile ? TouchBackend : HTML5Backend}\n      options={options}\n    >\n      <Table\n        scroll={{ x: 650 }}\n        pagination={false}\n        columns={columns}\n        dataSource={data}\n        components={components}\n        onRow={(record, index) => ({\n          index,\n          moveRow,\n        })}\n      />\n    </DndProvider>\n  );\n};\n\nexport default DragSortingTable;\n","import React from \"react\";\nimport { Popconfirm } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nexport const getColumns = (onEditRow, onDeleteRow) => [\n  {\n    title: \"Mã\",\n    dataIndex: \"code\",\n    key: \"code\",\n    fixed: \"left\",\n    width: 80,\n  },\n  {\n    title: \"Cut loss\",\n    dataIndex: \"cut_loss\",\n    key: \"cut_loss\",\n  },\n  {\n    title: \"Khoảng mua\",\n    dataIndex: \"range_buy\",\n    key: \"range_buy\",\n    render: (text, record) => (\n      <span>{record.buyFrom} - {record.buyTo}</span>\n    )\n  },\n  {\n    title: \"Target\",\n    dataIndex: \"target\",\n    key: \"target\",\n  },\n  {\n    title: \"Lợi nhuận\",\n    dataIndex: \"profit\",\n    key: \"profit\",\n    render: (text, record) => (\n      record.target && record.buyTo\n        ? (\n          ((record.target - record.buyTo) * 100) /\n          record.buyTo\n        ).toFixed(2) + '%'\n        : \"\"\n    )\n  },\n  {\n    title: \"Hành động\",\n    dataIndex: \"action\",\n    key: \"action\",\n    fixed: \"right\",\n    width: 120,\n    render: (text, record) => (\n      <div>\n        <EditOutlined style={{ paddingRight: 10 }} onClick={() => onEditRow(record)} />\n        <Popconfirm placement=\"topRight\" title=\"Bạn có chắc chắn muốn xoá mã này không?\" onConfirm={() => onDeleteRow(record)}>\n          <DeleteOutlined style={{ paddingLeft: 10 }} />\n        </Popconfirm>\n      </div>\n    )\n  },\n];","import React, { useEffect, useState } from \"react\";\nimport { Button, Layout, Modal, Input, InputNumber, Form } from \"antd\";\nimport \"./App.css\";\nimport DragSortingTable from \"./components/DragSortingTable\";\nimport { getColumns } from \"./ColumnsConfig\";\nconst { Header, Content } = Layout;\n\nconst layoutForm = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\n\nconst App = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [data, setData] = useState([]);\n  const [currentFormData, setCurrentFormData] = useState({});\n\n  const onAddRow = () => {\n    setCurrentFormData({});\n    setIsUpdate(false);\n    setShowModal(true);\n  };\n\n  const onEditRow = (record) => {\n    setCurrentFormData(record);\n    setIsUpdate(true);\n    setShowModal(true);\n  };\n\n  const onDeleteRow = (record) => {\n    const newData = data.filter((item) => item.code !== record.code);\n    setData(newData);\n    localStorage.setItem(\"data\", JSON.stringify(newData));\n  };\n\n  const handleCancelModal = () => {\n    setShowModal(false);\n  };\n\n  const handleSaveModal = () => {\n    if (isUpdate) {\n      const newData = data.map((item) => {\n        if (item.code === currentFormData.code.toUpperCase()) {\n          item.cut_loss = currentFormData.cut_loss;\n          item.buyFrom = currentFormData.buyFrom;\n          item.buyTo = currentFormData.buyTo;\n          item.target = currentFormData.target;\n        }\n        return item;\n      });\n      localStorage.setItem(\"data\", JSON.stringify(newData));\n      setData(newData);\n    } else {\n      currentFormData.code = currentFormData.code.toUpperCase();\n      const newData = [...data, currentFormData];\n      localStorage.setItem(\"data\", JSON.stringify(newData));\n      setData(newData);\n    }\n    setShowModal(false);\n  };\n\n  useEffect(() => {\n    const dataStorage = localStorage.getItem(\"data\")\n      ? JSON.parse(localStorage.getItem(\"data\"))\n      : [];\n    setData(dataStorage);\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"App\">\n        <Header>\n          <div>\n            <p className=\"title\">Stocks Watchlist</p>\n            <p className=\"sub-title\">Công cụ quản lý danh mục đầu tư</p>\n          </div>\n          <div>\n            <Button type=\"primary\" onClick={onAddRow}>\n              Thêm\n            </Button>\n          </div>\n        </Header>\n        <Content>\n          <DragSortingTable\n            dataSource={data}\n            columns={getColumns(onEditRow, onDeleteRow)}\n          />\n        </Content>\n      </Layout>\n\n      <Modal\n        visible={showModal}\n        title={isUpdate ? \"Chỉnh sửa mã\" : \"Thêm mã mới\"}\n        onCancel={handleCancelModal}\n        footer={[\n          <Button key=\"back\" onClick={handleCancelModal}>\n            Hủy bỏ\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={handleSaveModal}>\n            Lưu\n          </Button>,\n        ]}\n      >\n        <Form {...layoutForm} name=\"basic\" layout=\"horizontal\">\n          <Form.Item label=\"Mã CK\">\n            <Input\n              disabled={isUpdate}\n              value={currentFormData.code}\n              onChange={(e) =>\n                setCurrentFormData({ ...currentFormData, code: e.target.value })\n              }\n            />\n          </Form.Item>\n          <Form.Item label=\"Cut loss\">\n            <InputNumber\n              min={0}\n              step={0.1}\n              style={{ width: \"100%\" }}\n              value={currentFormData.cut_loss}\n              onChange={(value) =>\n                setCurrentFormData({\n                  ...currentFormData,\n                  cut_loss: value,\n                })\n              }\n            />\n          </Form.Item>\n          <Form.Item label=\"Khoảng mua\">\n            <InputNumber\n              min={0}\n              step={0.1}\n              value={currentFormData.buyFrom}\n              onChange={(value) =>\n                setCurrentFormData({\n                  ...currentFormData,\n                  buyFrom: value,\n                })\n              }\n            />\n            <span style={{ marginLeft: 10, marginRight: 10 }}>-</span>\n            <InputNumber\n              min={0}\n              step={0.1}\n              value={currentFormData.buyTo}\n              onChange={(value) =>\n                setCurrentFormData({\n                  ...currentFormData,\n                  buyTo: value,\n                })\n              }\n            />\n          </Form.Item>\n          <Form.Item label=\"Target\">\n            <InputNumber\n              min={0}\n              step={0.1}\n              style={{ width: \"100%\" }}\n              value={currentFormData.target}\n              onChange={(value) =>\n                setCurrentFormData({\n                  ...currentFormData,\n                  target: value,\n                })\n              }\n            />\n          </Form.Item>\n          <Form.Item label=\"Lợi nhuận\">\n            <InputNumber\n              disabled\n              placeholder=\"Ước tính theo giá mua lớn nhất\"\n              min={0}\n              step={0.1}\n              style={{ width: \"100%\" }}\n              value={\n                currentFormData.target && currentFormData.buyTo\n                  ? (\n                      ((currentFormData.target - currentFormData.buyTo) * 100) /\n                      currentFormData.buyTo\n                    ).toFixed(2)\n                  : \"\"\n              }\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}